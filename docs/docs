This module should be writtern in Rest for documentation

=========================================
Open Exoplanet Catalogue Python Interface
=========================================
This Module expands on the open exoplanet catalogue (link) by loading it into python as sys, planet and star objects and allowing the easy sorting and calculation of values.

Currently there is no support for binaries

Import the catalogue as
	import exoplanetcatalogue as oec

This initialises the database oec.db

to search for a planet:
	oec.db.searchPlanet('1214')

	returns Planet("GJ 1214 b")

to list all planets

	oec.planets

stars and systems

	oec.stars
	oec.systems

the respective objects store information as a params dictionary.

	oec.stars.params

This isnt however the best way to access values as some come from parent classes. for example to get the star object a planet belongs to

	gj1214b = oec.db.searchPlanet["gj1214b"]

	gj1214 = gj1214b.star

	and the planet from the star

	gj1214.planets

the position and distance are stored in the system class. these can be accessed from planets and stars using RA, DEC and d methods

	gj1214.RA
	gj1214b.d

For a full list of variables for each object see ()

You can also calculate other parameters.

	gj1214.transittime()
	...

For a full list of methods see ()

===
FAQ
===
* Why cant i search for a star?
** The catalogue only lists alternate names for planets and not for stars, this is perhaps an oversight since planet names are typically a starname and a letter. However if you want a star you can search for its planet 
	gj1214b = oec.db.search("1214")

	gj1214 = gj1214b.star